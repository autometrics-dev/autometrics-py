[tool.poetry]
name = "autometrics"
version = "1.0.0"
description = "Easily add metrics to your system â€“ and actually understand them using automatically customized Prometheus queries"
authors = ["Fiberplane <info@fiberplane.com>"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/autometrics-dev/autometrics-py"
homepage = "https://github.com/autometrics-dev/autometrics-py"
keywords = [
  "metrics",
  "telemetry",
  "prometheus",
  "monitoring",
  "observability",
  "instrumentation",
  "tracing",
]
classifiers = [
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Monitoring",
  "Typing :: Typed",
]
packages = [{ include = "autometrics", from = "src" }]

[tool.poetry.dependencies]
# The prometheus exporter is pinned to a beta version because of how opentelemetry-python has been releasing it.
# Technically, the version 1.12.0rc1 is the "latest" on pypi, but it's not the latest release.
# 0.41b0 includes the fix for exporting gauge values (previously they were always turned into counters).
opentelemetry-exporter-prometheus = "0.41b0"
opentelemetry-exporter-otlp-proto-http = { version = "^1.20.0", optional = true }
opentelemetry-exporter-otlp-proto-grpc = { version = "^1.20.0", optional = true }
opentelemetry-sdk = "^1.17.0"
prometheus-client = "^0.16.0 || ^0.17.0"
pydantic = "^2.4.1"
python = "^3.8"
python-dotenv = "^1.0.0"
typing-extensions = "^4.5.0"

[tool.poetry.extras]
exporter-otlp-proto-http = ["opentelemetry-exporter-otlp-proto-http"]
exporter-otlp-proto-grpc = ["opentelemetry-exporter-otlp-proto-grpc"]

[tool.poetry.group.dev]
optional = true

[tool.mypy]
namespace_packages = true
mypy_path = "src"
enable_incomplete_feature = "Unpack"

# This override is needed because with certain flavors of python and
# mypy you can get the following error:
# opentelemetry/attributes/__init__.py:14: error: invalid syntax
# Which at the time of writing is a line that states ignore types:
# `# type: ignore`
[[tool.mypy.overrides]]
module = ["opentelemetry.attributes"]
follow_imports = "skip"

[tool.pytest.ini_options]
usefixtures = "reset_environment"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.0"
pytest-asyncio = "^0.21.0"
black = "^23.3.0"
pytest-xdist = "^3.3.1"
mypy = "^1.5.1"
twine = "4.0.2"


[tool.poetry.group.examples]
optional = true

[tool.poetry.group.examples.dependencies]
anyio = "3.7.1"
bleach = "6.0.0"
build = "0.10.0"
certifi = "2023.7.22"
charset-normalizer = "3.1.0"
click = "8.1.3"
django = "^4.2"
docutils = "0.19"
fastapi = "^0.103.1"
h11 = "0.14.0"
idna = "3.4"
# pinned importlib-metadat to version ~6.0.0 because of opentelemetry-api
importlib-metadata = "~6.0.0"
jaraco-classes = "3.2.3"
keyring = "23.13.1"
markdown-it-py = "2.2.0"
mdurl = "0.1.2"
more-itertools = "9.1.0"
packaging = "23.0"
pkginfo = "1.9.6"
pygments = "2.16.1"
pyproject-hooks = "1.0.0"
readme-renderer = "37.3"
requests = "2.31.0"
requests-toolbelt = "0.10.1"
rfc3986 = "2.0.0"
rich = "13.3.2"
six = "1.16.0"
sniffio = "1.3.0"
starlette = ">=0.27.0,<0.28.0"
urllib3 = "1.26.18"
uvicorn = "0.21.1"
webencodings = "0.5.1"
zipp = "3.15.0"
locust = "^2.15.1"
django-stubs = "4.2.3"


[tool.poetry.group.development.dependencies]
types-requests = "^2.31.0.2"
django-stubs = "^4.2.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
